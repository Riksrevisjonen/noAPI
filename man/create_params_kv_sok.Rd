% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kartverket-utils.R
\name{create_params_kv_sok}
\alias{create_params_kv_sok}
\title{Query parameters for Get Address}
\usage{
create_params_kv_sok(
  search = NULL,
  fuzzy = FALSE,
  search_mode = c("AND", "OR"),
  object_type = c("Both", "Vegadresse", "Matrikkeladresse"),
  mun_code = NULL,
  mun_name = NULL,
  address_name = NULL,
  address_text = NULL,
  address_ext_name = NULL,
  address_code = NULL,
  address_number = NULL,
  address_letter = NULL,
  cadastral_unit_number = NULL,
  property_unit_number = NULL,
  leasehold_number = NULL,
  sub_code = NULL,
  unit_number = NULL,
  postal_town = NULL,
  postal_code = NULL,
  crs = 4258,
  ascii_compatible = TRUE,
  page = 0,
  size = 1000
)
}
\arguments{
\item{search}{A Norwegian address. For example: 'munkegata 1 trondheim'.}

\item{fuzzy}{If TRUE a fuzzy search on the provided addresses is conducted.
Not compatible with the use of wildcards (*).}

\item{search_mode}{Modify the \code{search} parameter with boolean logic. Use
this to select whether the search will require each search parameter to be
found in the match, or whether it is sufficient with hits on only one
parameter. E.g. \code{search} = 'munkegata 1 trondheim' & \code{search_mode}
= 'OR' will return everything that contains 'munkegata' and / or number '1'
and / or 'trondheim'. Defaults to 'AND'.}

\item{object_type}{Specify the type of address to query, either road
address ('Vegadresse'), cadastral address ('Matrikkeladresse') or both.
Defaults to both.}

\item{mun_code}{A character string with a Norwegian municipality code.}

\item{mun_name}{A character string with the name of a Norwegian municipality.}

\item{address_name}{A character string with the name of a street, road, path,
space or area that is entered in the cadastre.}

\item{address_text}{A character string with the name of a street, road, path,
space or area that is entered in the cadastre.}

\item{address_ext_name}{A character string with a inherited property unit
name, or the name of an institution or building that is used as part of an
official address.}

\item{address_code}{An integer value that uniquely identifies addressable
streets, roads, paths, places and areas that are entered in the cadastre
within the municipality.}

\item{address_number}{An integer value representing part of an address number
(house number), e.g. 23.}

\item{address_letter}{A character string representing part of an address
number (house number), e.g. the 'B' in 23B. To search only for addresses
without a letter, you include 'letter =' in the search string without
filling in any value.}

\item{cadastral_unit_number}{An integer value with the cadastral unit number
for the property. This is part of a cadastral address where road addresses
has not been introduced, or the road address's link to cadastral unit.}

\item{property_unit_number}{An integer value with the property unit number
for the property. This is part of a cadastral address where road addresses
has not been introduced, or the road address's link to cadastral unit.}

\item{leasehold_number}{An integer value with the leasehold number for the
property. This is part of a cadastral address where road addresses has not
been introduced, or the road address's link to cadastral unit.}

\item{sub_code}{An integer value with subcode (undernummer) for cadastral
addresses with the same cadastral, property and leasehold number.}

\item{unit_number}{An integer value with the unit number (formerly called flat
number) for an apartment in multi-dwelling buildings. The letter and the
first two numbers indicate the floor, the last two indicate the apartment's
number on the floor, counted from left to right. For example: 'H0102',
'K0101'.}

\item{postal_town}{A character string with the name of a Norwegian postal
town (place).}

\item{postal_code}{A character string with a Norwegian postal code.}

\item{crs}{The desired coordinate reference system for the output. Default
value is ETRS89 for latitude and longitude data (EPSG:4258). See details.}

\item{ascii_compatible}{If TRUE (default) the returned data is ASCII
compatible.}

\item{page}{An integer value with the page to query. Defaults to 0 (the first
page).}

\item{size}{An integer value with the size for each page. Defaults to 1000.}
}
\description{
Accepted query parameters for Kartverket's endpoint \verb{/sok}.
}
\keyword{internal}
